---
- name: Ensure servers are provisioned in vpc
  hosts: localhost
  gather_facts: false
  tags:
    - provision

  tasks:
  - name: Find last application images
    ec2_ami_facts:
      owners: self
      region: "{{ cli_ec2region }}"
      filters:
        "tag:Name": "{{ g_aminame }}"
        "tag:Build": "{{ g_aminame }}-{{ cli_ci_pipeline_id }}"
        "tag:OpCo": "{{ g_opco }}"
    register: ami_find

  - name: create a terraform deploy
    terraform:
      project_path: '{{ cli_tf }}'
      state: present
      force_init: true
      backend_config:
        key: "{{ cli_stackname }}"
      variables:
        AMI: "{{ ami_find.images[0].image_id }}"
        stackname: "{{ cli_stackname }}"
        environment: "{{ cli_deploymentenv }}"
        aws_access_key: "{{ cli_aws_access_key }}"
        aws_secret_key: "{{ cli_aws_secret_key }}"
        action: "{{ cli_action }}"
      workspace: "{{ cli_deploymentenv }}"
    register: stdout

  - name: Show terraform stdout
    debug: msg="{{ stdout }}"

  - name: Get facts about all the newly created instances
    ec2_instance_facts:
      region: "{{ cli_ec2region }}"
      filters:
        instance-state-name: running
        "tag:stackname": "{{ cli_stackname }}"
    register: ec2_facts

  - name: Ensure all instances are ready
    wait_for:
      port: 22
      host: "{{ item.public_ip_address }}"
      search_regex: OpenSSH
    with_items: "{{ ec2_facts.instances }}"